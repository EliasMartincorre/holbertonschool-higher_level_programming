
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix_divided([[2.2, 2.3], [2, 4]], 2))
[[1.1, 1.15], [1.0, 2.0]]
>>> matrix_divided((1, ), 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix(list of lists) of integers/floats
>>> matrix_divided([[1, 2], [1]], 6)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[2, 2], [2, 2]], "NaN")
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided([[2, 2], [2, ""]], "NaN")
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided([[2, 2], [2, ""]], 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix(list of lists) of integers/floats

>>> matrix_divided([[2, 2], [2, 5]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([], 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix(list of lists) of integers/floats